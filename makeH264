import os
import argparse
import subprocess

def convert_mov_to_h264(input_dirs, verbose=True):
    for input_dir in input_dirs:
        mp4_dir = os.path.join(input_dir, "mp4")
        if not os.path.exists(mp4_dir):
            os.makedirs(mp4_dir)
        
        for filename in os.listdir(input_dir):
            if filename.lower().endswith(".mov"):
                mov_path = os.path.join(input_dir, filename)
                mp4_path = os.path.join(mp4_dir, os.path.splitext(filename)[0] + ".mp4")
                
              command = [
                    "ffmpeg", "-n", "-vsync", "0", "-nostdin", "-v", "info", "-hide_banner", "-stats",
                    "-i", mov_path, 
                    "-c:v", "libx264", "-crf", "30", "-preset", "fast", "-pix_fmt", "yuv420p", "-bufsize", "1835k",
                    "-movflags", "+faststart",  # Correct placement
                    "-map", "0:v", "-map", "0:a?", "-c:a", "aac", "-b:a", "192k",
                    mp4_path  # Output file should always be last
                ]
                
                try:
                    subprocess.run(command, check=True)
                    if verbose:
                        print(f"Converted: {filename} -> {os.path.basename(mp4_path)} in {mp4_dir}")
                except subprocess.CalledProcessError as e:
                    print(f"Error converting {filename}: {e}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Convert .mov files to H.264 .mp4 with specified settings.")
    parser.add_argument("input_directories", type=str, nargs='+', help="One or more directories containing .mov files.")
    args = parser.parse_args()
    
    convert_mov_to_h264(args.input_directories)
